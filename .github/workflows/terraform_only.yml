name: Create or destroy infrastructure using Terraform

on:
  workflow_dispatch:
    inputs:
      agent_action:
        description: 'create or destroy'
        required: true
        type: string
      agent_identifier_name:
        description: 'Agent Identifier Name'
        required: true
        type: string
      
permissions:
  contents: read
  id-token: write


jobs:
  terraform:
    runs-on: ubuntu-latest
    #environment: dev # Configur ENVs
    permissions:
      contents: read
      id-token: write
      
    steps:
      - name: 'Checkout Code'
        uses: 'actions/checkout@v2'

      - id: auth  
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        
        with:
          
          #workload_identity_provider: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}' # It's proabably da-idp
          workload_identity_provider: 'projects/351592443/locations/global/workloadIdentityPools/identity-pool-2/providers/da-idp' # It's proabably da-idp
          service_account: '${{ secrets.SERVICE_ACCOUNT }}'
          project_id: '${{ secrets.PROJECT_ID }}'
          #id_token_audience: 'https://iam.googleapis.com/projects/351592443/locations/global/workloadIdentityPools/identity-pool-2/providers/da-idp'
        
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Show Inputs
        run: |
          echo "ACTION='${{ github.event.inputs.agent_action }}'"
          echo "AGENT_NAME='${{ github.event.inputs.agent_identifier_name }}'"        

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Terraform Init with Local Backend
        run: terraform init 

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan       

      - name: Terraform Apply or Destroy
        run: |
          if [[ "${{ github.event.inputs.agent_action }}" == "destroy" ]]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi

      - name: Capture Terraform Outputs (only on create)
        
        
        run: |
          terraform output > abc.txt
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          gsutil cp abc.txt gs://staging_bucket_ai/ga_tf_op/abc_${TIMESTAMP}.txt
          
