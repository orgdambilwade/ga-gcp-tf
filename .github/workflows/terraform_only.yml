name: Create or destroy infrastructure using Terraform

on:
  workflow_dispatch:
    inputs:
      agent_action:
        description: 'create or destroy'
        required: true
        type: string
      agent_identifier_name:
        description: 'Agent Identifier Name'
        required: true
        type: string
      
permissions:
  contents: write
  
jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Clone the gcloud auth libraries
        uses: 'actions/checkout@v4'

      - name: Auth config and execution
        uses: 'google-github-actions/auth@v2'
        
        with:
          project_id: 'eternal-argon-461501-a8'
          workload_identity_provider: projects/351592443/locations/global/workloadIdentityPools/providers/github-actions-provider
      - name: 'Set up Google Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'


      - name: 'Use gcloud CLI'
        run: 'gcloud info'







      - name: Checkout
        uses: actions/checkout@main

      - name: Show Inputs
        run: |
          echo "ACTION='${{ github.event.inputs.agent_action }}'"
          echo "AGENT_NAME='${{ github.event.inputs.agent_identifier_name }}'"        

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Terraform Init with Local Backend
        run: |
          terraform init 

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan        

      - name: Terraform Apply or Destroy
        run: |
          if [[ "${{ github.event.inputs.agent_action }}" == "destroy" ]]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi
        #env:
        
        #  GOOGLE_CLOUD_LOCATION: 
        #  GOOGLE_CLOUD_PROJECT:
        #  GOOGLE_CLOUD_STORAGE_BUCKET:
        #  GOOGLE_GENAI_USE_VERTEXAI:


      - name: Capture Terraform Outputs (only on create)
        if: ${{ github.event.inputs.agent_action == 'create' }}
        run: |
          mkdir -p agt_outputs
          terraform output -json | sed '1d' > agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json

      - name: Clean JSON File
        if: ${{ github.event.inputs.agent_action == 'create' }}
        run: |
          sed -i '/^[^{]/d' agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json

      - name: Debug Terraform Output File
        if: ${{ github.event.inputs.agent_action == 'create' }}  
        run: |
          echo "Contents of ./agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json:"
          cat agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json
  
      - name: âœ… Validate Output JSON
        if: ${{ github.event.inputs.agent_action == 'create' }}
        run: |
          cat agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json
          jq . agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json

      - name: Upload Terraform Outputs
        if: ${{ github.event.inputs.agent_action == 'create' }}
        uses: actions/upload-artifact@v4
        with:
          name: terraform-outputs
          path: agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json

      - name: Commit tfvars and outputs (only on create)
        if: ${{ github.event.inputs.agent_action == 'create' }}
        run: |
          git config --global user.email "a.dheerajj@gmail.com"
          git config --global user.name "dambilwade"
          git fetch origin
          git checkout main
          git pull origin main
          git add tfvars_agt_input/${{ github.event.inputs.agent_identifier_name }}.tfvars.json
          git add agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json
          git commit -m "Save tfvars & outputs for agent: ${{ github.event.inputs.agent_identifier_name }}"
          git push origin main
        #env:
        #  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}          

      - name: Show tfvars content in Backstage UI
        if: ${{ github.event.inputs.agent_action == 'create' }}
        run: |
          echo "------ TFVARS (${{
            github.event.inputs.agent_identifier_name
          }}) ------"
          cat tfvars_agt_input/${{ github.event.inputs.agent_identifier_name }}.tfvars.json
          echo "------ END TFVARS ------"

      - name: Show outputs content in Backstage UI
        if: ${{ github.event.inputs.agent_action == 'create' }}
        run: |
          echo "------ OUTPUTS (${{
            github.event.inputs.agent_identifier_name
          }}) ------"
          cat agt_outputs/${{ github.event.inputs.agent_identifier_name }}.json
          echo "------ END OUTPUTS ------"